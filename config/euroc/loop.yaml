%YAML:1.0

#common parameters
#imu_topic: "/imu0"
#image_topic: "/cam0/image_raw"
imu_topic: "/camera/imu"
image_topic: "/camera/color/image_raw"
depth_topic: "/camera/aligned_depth_to_color/image_raw"

output_path: "/home/zlc/cpl-tmp_ws/src/PL-VINS/Trajactory/"         # vins outputs will be wrttento vins_folder_path + output_path

#pointcloud settings
pcl_dist: 10
u_boundary: 10
d_boundary: 10
l_boundary: 40
r_boundary: 40
pcl_min_dist: 0.3
pcl_max_dist: 6
resolution: 0.02


#RGBD camera Ideal Range
depth_min_dist: 0.2     # zlc新添加的
depth_max_dist: 10      # zlc新添加的



#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 640        # 这里可以更改
image_height: 480       # 这里可以更改

distortion_parameters:
   k1: 1.25323e-01
   k2: -2.51452e-01
   p1: 7.12e-04
   p2: 6.217e-03
projection_parameters:
   fx: 6.165911254882812e+02
   fy: 6.166796264648438e+02
   cx: 3.242193603515625e+02
   cy: 2.3942701721191406e+02

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 0.0008748, -0.0047406,  0.9999884,
           -0.9999681, -0.0079460,  0.0008371,
           0.0079419, -0.9999572, -0.0047474 ]
#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [1.30441e-05, 0.0149225, 0.000316835]

#feature traker paprameters
max_cnt: 200            # max feature number in feature tracking
min_dist: 15            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.06  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2
gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05
acc_w: 0.0002         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#loop closure parameters
loop_closure: 1                 # start loop closure
load_previous_pose_graph: 0     # load and reuse previous pose graph; load from 'pose_graph_save_path'
fast_relocalization: 1          # useful in real-time and large project
pose_graph_save_path: "/home/zlc/cpl-tmp_ws/src/PL-VINS/Trajactory/pose_graph/" # save and load path

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#rolling shutter parameters
rolling_shutter: 1                  # 0: global shutter camera, 1: rolling shutter camera
rolling_shutter_tr: 0.033           # unit: s. rolling shutter read out time per frame (from data sheet).

#visualization parameters
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
visualize_imu_forward: 0        # output imu forward propogation to achieve low latency and high frequence results
visualize_camera_size: 0.4      # size of camera marker in RVIZ



#视觉标签：为语义SLAM做准备
semantic_label: [ "person", "bicycle", "car", "motorbike",
                  "aeroplane","bus", "train", "truck", "boat",
                  "traffic light", "fire hydrant", "stop sign", "parking meter",
                  "bench", "bird", "cat", "dog", "horse",
                  "sheep", "cow", "elephant", "bear", "zebra",
                  "giraffe", "backpack", "umbrella", "handbag","tie",
                  "suitcase", "frisbee", "skis", "snowboard", "sports ball",
                  "kite", "baseball bat", "baseball glove", "skateboard", "surfboard",
                  "tennis racket", "bottle", "wine glass", "cup",
                  "fork", "knife", "spoon", "bowl", "banana",
                  "apple", "sandwich", "orange", "broccoli", "carrot",
                  "hot dog", "pizza", "donut", "cake", "chair",
                  "sofa", "potted plant", "bed", "dining table", "toilet",
                  "TV monitor", "laptop", "mouse", "remote", "keyboard",
                  "cell phone", "microwave", "oven", "toaster", "sink",
                  "refrigerator", "book", "clock", "vase","scissors",
                  "teddy bear", "hair drier", "toothbrush" ]

# 未来可以考虑加入unknown的label表示门，窗户等有可能会变化的物体
static_label: [ "bicycle", "car", "motorbike",
                "aeroplane","bus", "train", "truck", "boat",
                "traffic light", "fire hydrant", "stop sign", "parking meter",
                "bench",  "backpack", "umbrella", "handbag","tie",
                "suitcase", "frisbee", "skis", "snowboard", "sports ball",
                "kite", "baseball bat", "baseball glove", "skateboard", "surfboard",
                "tennis racket", "bottle", "wine glass", "cup",
                "fork", "knife", "spoon", "bowl", "banana",
                "apple", "sandwich", "orange", "broccoli", "carrot",
                "hot dog", "pizza", "donut", "cake", "chair",
                "sofa", "potted plant", "bed", "dining table", "toilet",
                "TV monitor", "laptop", "mouse", "remote", "keyboard",
                "cell phone", "microwave", "oven", "toaster", "sink",
                "refrigerator", "book", "clock", "vase","scissors",
                "teddy bear", "hair drier", "toothbrush" ]

#暂时仅考虑动物
dynamic_label: ["person", "bird", "cat", "dog", "horse",
                "sheep", "cow", "elephant", "bear", "zebra",
                "giraffe"]